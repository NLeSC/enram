<?xml version="1.0" encoding="UTF-8"?>

<project name="ncradar" default="runit" basedir=".">
  <description>
  	simple example build file
  </description>

  <property name="src.main.java"               location="src/main/java"/>
  <property name="src.main.native"             location="src/main/native"/>
  <property name="src.main.native.sayhello"    location="src/main/native/sayhello"/>
  <property name="src.main.native.libvol2bird" location="src/main/native/libvol2bird"/>
  <property name="src.test"                    location="src/test"/>
  <property name="target.main"                 location="target/main"/>	
  <property name="target.main.classes"         location="target/main/classes"/>
  <property name="target.main.lib"             location="target/main/lib"/>
  <property name="target.main.lib.libvol2bird" location="target/main/lib/libvol2bird"/>
  <property name="target.main.lib.netcdf"      location="target/main/lib/netcdf"/>
  <property name="target.main.lib.sayhello"    location="target/main/lib/sayhello"/>
  <property name="target.test"                 location="target/test"/>
  <property name="target.reports"              location="target/reports"/>
  <property name="javadoc"                     location="javadoc"/>
	
  
  <!--	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
	javac HelloWorld.java
	javah HelloWorld
	gcc -shared libHelloWorld.c -o libHelloWorld.so
	java HelloWorld
  -->	

  <target name="clean" description="clean up" >
	  <delete dir="${target.main.classes}"/>
	  <delete dir="${target.main.lib.libvol2bird}"/>
	  <delete dir="${target.main.lib.sayhello}"/>
  </target>
	
  <target name="init" depends="clean">
    <tstamp/>
    <mkdir dir="${target.main.classes}"/>
    <mkdir dir="${target.main.lib}"/>
    <mkdir dir="${target.main.lib.sayhello}"/>
    <mkdir dir="${target.main.lib.libvol2bird}"/>
    <mkdir dir="${target.test}"/>
    <mkdir dir="${target.reports}"/>
  </target>

  <target name="javacompile" depends="init" description="compile the java source code" >
    <javac srcdir="${src.main.java}" 
    	   destdir="${target.main.classes}" 
    	   classpath="${target.main.lib.netcdf}/netcdfAll-4.3.jar"
    	   includeAntRuntime="false"/>
  </target>

  <target name="jniheaders" depends="javacompile" description="Use javah to create the JNI header" >
    <javah force="yes" classpath="${target.main.classes}" destdir="${target.main.lib.sayhello}">
    	<class name="nl.esciencecenter.ncradar.RadarScan"/>
    </javah>
  </target>

  <target name="sayhello" depends="jniheaders" description="compile the C-language source file sayhello into a shared object" >
    <exec dir="${src.main.native.sayhello}" executable="gcc">
    	<arg line="-fPIC"/>
        <arg line="-I/usr/lib/jvm/java-6-openjdk-amd64/include/"/>
        <arg line="-I${target.main.lib.sayhello}"/>
        <arg line="-shared"/>
        <arg line="sayhello.c"/>
        <arg line="-o"/>
        <arg line="${target.main.lib.sayhello}/sayhello.so"/>
    </exec>
  </target> 

  <target name="makejar" depends="sayhello" description="make a jar out of everything">
    <jar destfile="ncradar.jar" basedir="${target.main}"/>
  </target>

  <target name="runit" depends="makejar" description="run the jar containing everything">
	<java jar="ncradar.jar" fork="true" />
  </target>
	
</project>
